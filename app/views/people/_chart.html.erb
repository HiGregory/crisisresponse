<h2><%= title %></h2>
<div class="ct-chart <%= title.gsub(" ", "").underscore %>"></div>

<%
fields.reverse!
positive = ['x', 'yes']

series = fields.map do |field|
  count = @events.count { |e| positive.include?(e.send(field).downcase) }.to_f
  count / @events.count
end

nonzero = fields.zip(series).select do |field, value|
  value > 0
end

(fields, series) = nonzero.transpose
%>

<script>
var data = {
  labels: <%= fields.inspect.html_safe %>,
  series: [ <%= series.inspect.html_safe %> ]
};

// As options we currently only set a static size of 300x200 px. We can also omit this and use aspect ratio containers
// as you saw in the previous example
var options = {
  axisY: {
    offset: 160,
    labelInterpolationFnc: function(field, index, domain) {
      return field.replace("chbk_", "").replace("dispo_", "");
    },
  },
  axisX: {
    offset: 10,
    scaleMinSpace: 100,
    position: 'start',
    labelInterpolationFnc: function(value, index, all) {
      return String(value * 100) + "%";
    },
  },
  height: <%= 40 + 20 * fields.count %>,
  width: 500,
  low: 0,
  high: 1,
  horizontalBars: true
};

// Create a new line chart object where as first parameter we pass in a selector
// that is resolving to our chart container element. The Second parameter
// is the actual data object. As a third parameter we pass in our custom options.
new Chartist.Bar('.ct-chart.<%=title.gsub(" ", "").underscore%>', data, options);
</script>
